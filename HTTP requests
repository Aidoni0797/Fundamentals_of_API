HTTP requests

Взаимодействие в HTTP основано на концепции, называемой Циклом "Запрос-Ответ". Клиент отправляет серверу
запрос на выполнение каких-либо действий. Сервер, в свою очередь, отправляет клиенту ответ, в котором
говорит может ли он сделать то, что просил клиент.

Чтобы сделать правильный запрос, клиент должен указать четыре вещи:
1. URL (Unifirm Resource Locator, единый указатель ресурсов)
2. Метод (Method)
3. Список Заголовков (Headers)
4. Тело (Body)

Может показаться, что тут слишком много всего чтобы просто передать сообщение, но помните, что
кмопьютеры должны быть очень точными, чтобы общаться друг с другом.

Структура HTTP-запроса приведена на картинке ниже.

URL
URL-адреса знакомы нам в поведневном использовании интернета, но задумывались ли вы когда-нибудь об
их структуре? В HTTP URL-это уникальный адрес какого-либо объекта. Каким объектам давать адреса - 
полностью решает организация, которая управляет сервером. Компании могут создавать URL-адреса для 
веб-страниц, изображений или даже видео с котиками.

API развивают эту идею, добавляя в контекст URL такие объекты, как, например, клиенты, продукты и твиты.
В результате URL-адреса становятся для клиента простым способом сообщить серверу, с каким объектом он
хочет взаимодействовать. Конечно, API не называют их объектами, им дают техническое название ресурсы.

Методы (methods)

Метод запроса сообщает серверу, какое  действие клиент хочет, чтобы сервер предпринял. Фактически, метод
обычно называются глаголом запроса.
В API-интерфейсах чаще всего встречаются четыре метода:
- GET - просит сервер получить ресурс
- POST - просит сервер создать новый ресурс
- PUT - просит сревер отредактировать/обновить существующий ресурс
- DELETE - просит сервер удалить ресурс

Но существуют ещё методы CONNECT, OPTIONS, PATCH, TRACE, LIST. Механизмы их работы описаны тут:
https://developer.mozilla.org/ru/docs/Web/HTTP/Methods 

Вот пример, который поможет проиллютрировать эти методы. Допустим, есть пиццерия с API, который можно
использовать для размещения заказов. Вы размещаете заказ, отправляя POST-запрос на сервер ресторана с
перечнем вашего заказа с просьбой создать ващу пиццу поо этим ингредиентам. Однако после того как вы отправили
запрос, вы понимаете, что выбрали неправлиьные ингредиенты, поэтому вы делаете запрос PUT, чтобы изменить 
его.
Ожидая своего заказа, вы делаете кучу запросов GET для проверки статуса. После часа ожидания вы решаете,
что не готовы больше ждать, и делаете DELETE-запрос, чтобы отменить свой заказ.


Заголовки (Headers)
Заголовки предоставляют метаинформацию о запросе. Это простой список элементов, таких как время
