Protocols

Знание правил

Люди создают правила этикета, чтобы регламентировать взаимодействия между собой. Один из примеров - то,
как мы разговариваем друг с другом по телефону. Представьте, что вы болтаете с подругой. Пока она
говорит, вы знаете, что нужно молчать. Если она задаёт вопрос, а молчит, вы знаете, что она ждёт ответа
и теперь ваша очередь говорить.

Компьютеры придерживаются аналогичного этикета, хотя и называется он термином "протокол".
Компьютерный протокол - это принятый набор правил, которые определяют, как два компьютера могут
общаться друг с другом. Однако по сравнению с нашими стандартами компьютерный протокол чрезвычайно
строгий. Подумайте на минуту о двух предложениях: Мой любимый цвет - синий и Синий - мой любимый цвет.
Люди могут определить каждое предложение и понять, что они означают одно и то же, несмотря на то,
что слова расположены в разном порядке. К сожаления, компьютеры не настолько умны.

Чтобы два компьютера могли эффективно взаимодействовать, сервер должен точно знать, как клиент будет
структурировать свои сообщения. Представьте, что сервер - это человек, который просит почтовый адрес.
Когда вы спрашиваетет как определить место назначения, вы предпологаете, что первое, что вам скажут - 
это город, за которым следуют почтовый индекс, улица и, наконец, дом. У вас также есть определенные ожидания
в отношении каждой части адреса, например, тот факт, что почтовый индекс должен состоять только из цифр.
Похожий уровень точности нужен и для правильной работы компьютерного протокола.

Протокол интернета

В мире технологий практически для всего существует протокол, и каждый из них заточен для выполнения
своих задач. Возможно, вы уже слышали о некоторых из них: Bluetooth для подключения устройств и 
POP или IMAP для получения электронной почты.

В интернете основным протоколом является протокол передачи гипертекста, более известный под
аббревиатурой HTTP (HuperText Transfer Protocol, протокол передачи гипертекста). Когда вы вводите
адрес вроде http://example.com в веб-браузере, http указывает браузеру использовать правила
HTTP-протокола при разговоре с сервером.

С повсеместным распространением HTTP в интернете многие компании предпочитают адаптировать его для 
использования в качестве протокола, лежащего в основе своих API-интерфейсов. Одним из преимуществ
использования этого протокола является то, что он прост в изучении разработчиками. Еще одним 
преимуществом является то, что HTTP имеет несколько свойств, полезных для создания хорошего API,
которые мы увидим позже. А сейчас давайте нырнём глубже и посмотрим, ка работает HTTP!
