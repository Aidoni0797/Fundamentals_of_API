Data retrieval

Поиск данных

По мере роста объемаданных в системе, конечные точки, которые выдают полный перечень записей,
становятся непрактичными. Представьте себе, что в нашей пиццерии было три миллиона
выполненных заказов, и  вы хотели бы узнать, в скольких из них есть пепперони в качестве 
начинки. Отправка запроса GET на /orders и получение всех трех миллионов заказов не очень
помогает. К счастью, в REST есть отличный способ поиска данных.

У URL есть еще один компонент, о котором мы еще не упомянули - строка запроса (query string)
Запрос означает поиск, а строка означает текст. СТрока запроса - это фрагмент текста,
который идет в конец URL-адреса для передачи данных в API. Например, все, что находится после
вопросительного знака, является строкой запроса в http://example.com/orders?key=value

API REST используют строку запроса для указания деталей поиска. Эти сведения называются 
параметрами запроса. API определяет, какие параметры он будет принимать, и их точные имена
должны использоваться, чтобы они могли влиять на поиск. Наш API пиццерии может позволить
клиенту искать заказы по топпингам их по следуюзему URL-адресу: http://example.com/orders?topping=pepperoni.
Клиент может включать несколько параметров запроса, перечисляя один за другим, разделяя их
амперсанжом ("&"). Например: http://example.com/orders?topping=pepperoni&crust=thin

Другое использование строки запроса - ограничение количества данных, возвращаемых в каждом
запросе. Часто API-интерфейсы разделяют результаты на наборы (скажем, из 100 или 500 записей)
и возвращают по одному набору за раз. Этот процесс разделения данных известен как
разбиение на страницы (pagination, аналогия разбиения слов на страницы для книг).
Чтобы позволить клиенту просматривать все данные, API будет поддерживать паарметры запроса,
которые позволяют клиенту указать, какую страницу данных он хочет. В нашем API пиццерии
мы можем поддерживать разбиение на страницы, позволяя клиенту указывать два параметра:
страницу и размер. Если клиент делает запрос типа GWT /orders?page=2&size=200, 
мы знаем, что ему нужна вторая страница результатов с 200 результатами на страницу,
а именно заказы 201-400.


В этом уроке мы узнали, как разработать REST API. Мы показали основные функции,
поддерживаемые API, и показали, как организовать данные так, чтобы их можно было
легко использовать компьютеру. Ключевые термины, которые мы узнали, были:
- SOAP: протокол обмена структурированными сообщениями в распределённой вычислительной среде
- REST: архитектура API, ориентированная на управление ресурсами
- Ресурс: термин API для такого бизнес-объекта? как клиент или заказ.
- Конечная точка: URL-адрес, состовляющий часть API. В REST каждый ресурс получает свои собственные
конечные точки
- Строка запроса: часть URL-адреса, которая используются для передачи данных на сервер.
- Параметры запроса: пара "ключ-значение", найденная в строке запроса (топпинг=сыр)
- Разбиение на страницы: процесс разделения результатов на управляемые части.
