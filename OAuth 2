OAuth 2

Для начала нам нужно знать набоор персонажей, участвующих в обмене OAuth:

- Пользователь - человек, который хочет связать два веб-сайта.
- Клиент - веб-сайт, которому будет предоставлен доступ к данным пользователя.
- Сервер - веб-сайт, на котором хранятся данные пользователя.

Затем нужно сделать краткое объявление. Одна из целей OAuth2 - позволить организациям адаптировать процесс аутентификации к своим потребностям.
Из-за такой расширяемой природы у API могут быть несколько разные шаги. Показанный ниже сценарий является обычным для веб-приложений. В мобильных
и настольных приложениях этот процесс может немного отличаться.

Итак, вот шаги OAuth2.
Шаг1 - Пользователь сообщает клиенту о необходимости подключения к серверу.

Пользователь запускает процесс, давая понять клиенту, что он хочет, чтобы он подключился к серверу. Обычно это делается нажатием кнопки.

Шаг 2 - Клиент направляет пользователя на сервер

Клиент отправляет пользователя на веб-сайт сервера вместе с URL-адресом, на который
сервер отправит пользователя обратно после аутентификации пользователя, называемого
URL-адресом обратного вызова (callback URL).

Шаг 3 - Пользователь входит на сервер и получает клиентский доступ

Используя свое обычное имя пользователя и пароль, пользователь аутентифицируется на сервере.
Теперь сервер уверен, что один из его собственных пользователей запрашивает у клиента
доступ к учетной записи пользователя и связанным данным.

Шаг 4 - Сервер отправляет пользователя обратно клиенту вместе с кодом

Сервер отправляет пользователя обратно клиенту (на URL-адрес обратного вызова из шага 2).
В ответе скрыт уникальный код авторизации для клиента.

Шаг 5 - Клиент обменивает Код + секретный Ключ на Токен доступа

КЛиент берет полученный код авторизации и делает еще один запрос к серверу. Этот запрос включает
секретный ключ клиента. Когда сервер видит действительный код авторизации и секретный ключ
доверенного клиента, он уверен, что клиент является тем, кем он себя называет, и что он
действует от имени реального пользователя. Сервер отвечает текном доступа.

Шаг 6 - Клиент получает данные с сервера

На этом этапе клиент может получить доступ к серверу от имени пользователя. Маркер доступа из шага 6
это, по сути, еще один пароль для учетной записи пользователя на сервере. Клиент включает токен 
доступа в каждый запрос, чтобы он мог путентифицироваться напрямую с сервером.

Клиент обновляет токен (необязательно)

Функция, представляенная в OAuth2 - это возможность истечения срока действия токенов доступа.
Это полезно для защиты учетных записей пользователей за счет усиления безопасности - чем быстрее
истекает срок действия токена, тем меньше времени может быть злонамеренно использован
украденный токен, подобно тому, как срок действия номера кредитной карты истекает через
определенное время. Срок службы токена устанавливается сервером. API на практике могут
использовать срок от часов до месяцев. По истечении срока службы клиентдолжен запросить
у сервера новый токен.
