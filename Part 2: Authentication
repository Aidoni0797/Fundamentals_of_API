Part 2: Authentication

В этом уроке мы рассмотрим другое решение - Открытую Авторизацию (Open Authorization, OAuth)

Делая жизнь проще для людей

Вам когда+нибудь приходилось заполнять регистрационную форму, подробную приведенной ниже?

Ввод длинного ключа формы, подобное приведенному выше, создает посредственный опыт пользователя. Во-первых, вам нужно найти требуемый ключ.
Конечно, он был прямо в вашем почтовом ящике, когда вы купили программное обеспечение, но год спустя вы пытаетесь его найти (с какого адреса
электронной почты оно было отправлено? Какой адрес электронной почты я использовал для регистрации?!). Как только вы его найдете, вам нужно
ввести чертову строку один в один в почте - опечатка или пропуск одного символа приведет к сбою или даже может заблокировать вашу незарегистрированную
программу!

Принуждение пользователей к работе с ключами API - тоже плохой опыт. Опечатки - обычная проблема, и она требует, чтобы пользователь вручную
выполнял часть настройки между клиентом и сервером. Пользователь должен получить ключ от сервера, а затем передать его клиенту. Для интсрументов,
предназначенных для автоматизации работы, безусловно, есть лучшее решение.

И тут появляется OAuth. Автоматизация обмена ключами - одна из основных проблем, которую решает OAuth. Он предоставляет клиенту стандартный способ
получить ключ от сервера, проведя пользователя через простой набор шагов. С точки зрения пользователя, все, что требуется для OAuth - это ввод
учетных данных. За кулисами клиент и сервер общаются туда-сюда, чтобы добиться работающего ключа для клиента.

В настоящее время существует две версии OAuth, метко названные OAuth1 and OAuth2. Понимание шагов в каждом из них необходимо, чтобы иметь 
возможность взаимодействовать с API, которые используют их для аутентификации. Поскольку у них общий сценарий, мы пройдемся по этапам OAuth2,
затем укажем, чем отличается OAuth1.
